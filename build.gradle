buildscript {
    ext {
        spring_boot_version = '3.3.3'
        spring_dependency_management_version = '1.1.6'
        spotless_version = '6.25.0'
        jjwt_version = '0.11.5'
        swagger_version = '2.0.2'
        junit_version = '5.2.0'
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version "${spring_boot_version}"
    id 'io.spring.dependency-management' version "${spring_dependency_management_version}"
    id "com.diffplug.spotless" version "${spotless_version}"
}

group = 'com.ordertogether'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

apply {
    from('./tasks/update-git-hooks.gradle')
}

dependencies {
    /** spring boot starter */
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "io.jsonwebtoken:jjwt-api:${jjwt_version}"
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:${swagger_version}"
    implementation 'org.mapstruct:mapstruct:1.6.2'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.6.2'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
//    testImplementation 'org.springframework.security:spring-security-test'

    /** thymeleaf and spring security integration */
//    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'

    /** lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly "io.jsonwebtoken:jjwt-impl:${jjwt_version}"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jjwt_version}"

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation "org.mockito:mockito-junit-jupiter:${junit_version}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

spotless {
    java {
        googleJavaFormat()
        indentWithTabs(2)
        trimTrailingWhitespace()
        endWithNewline()
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
